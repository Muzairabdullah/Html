std@SFC-LAB220-PC07 MINGW64 ~/Desktop
($ git config --global user.name Muhammad_Uzair) -> "Creat User Name"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop
($ git config --global user.email muzairabdullah2@gmail.com) -> "Creat User Email"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop
$ git config --global user.name  -> "Check User Name"
Muhammad_Uzair

std@SFC-LAB220-PC07 MINGW64 ~/Desktop
$ git config --global user.emai

std@SFC-LAB220-PC07 MINGW64 ~/Desktop
$ git config --global user.email  -> "Check User Email"
muzairabdullah2@gmail.com

std@SFC-LAB220-PC07 MINGW64 ~/Desktop
($ mkdir Web---First) -> "Creat Folder for desktop"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop
($ cd Web---First)  -> "Full Form Change Directory"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First
$ git init  -> "Creat Folder inside forlder for init"
Initialized empty Git repository in C:/Users/std/Desktop/Web---First/.git/

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ touch index.html -> "Creat File"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status  -> "Check of File"
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        index.html

nothing added to commit but untracked files present (use "git add" to track)

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add index.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ code .  -> "Creat Visual Studio Codoe"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.html

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add index.html  -> "Add of all file"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.html


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ ls -> "Information for all file"
index.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m "Final Commit" -> "Commit your work"
[master (root-commit) ed81c2c] Final Commit
 1 file changed, 13 insertions(+)
 create mode 100644 index.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ touch web.html -> "Creat new File"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ touch Lab.html -> "Creat new file"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ touch contact.html -> "Creat new file"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Lab.html
        contact.html
        web.html

nothing added to commit but untracked files present (use "git add" to track)

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add contact.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   contact.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Lab.html
        web.html


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add -A  -> "Add of all file"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Lab.html
        new file:   contact.html
        new file:   web.html


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m "Last Commit"
[master 5e71ba6] Last Commit
 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 Lab.html
 create mode 100644 contact.html
 create mode 100644 web.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ checkout index.html -> "Remove for file work"
bash: checkout: command not found

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ checkout index.html
bash: checkout: command not found

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    index.html

no changes added to commit (use "git add" and/or "git commit -a")

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git restore index.html -> "Second Step remove for file work"

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
nothing to commit, working tree clean

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m  -> "Your file commit then next time open this point work start"
error: switch `m' requires a value

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
nothing to commit, working tree clean

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ checkout
bash: checkout: command not found

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git restore index.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
nothing to commit, working tree clean

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        Web.css

nothing added to commit but untracked files present (use "git add" to track)

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add Web.css

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git statu
git: 'statu' is not a git command. See 'git --help'.

The most similar commands are
        status
        stage
        stash

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git restore Web.css

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m
error: switch `m' requires a value

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ ^C

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ ^C

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add Web.css

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m
error: switch `m' requires a value

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Lab.html


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git restore Lab.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git -> "Information for git"
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ mv Lab.html
mv: missing destination file operand after 'Lab.html'
Try 'mv --help' for more information.

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ mv index.html
mv: missing destination file operand after 'index.html'
Try 'mv --help' for more information.

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git mv Lab.html
usage: git mv [<options>] <source>... <destination>

    -v, --verbose         be verbose
    -n, --dry-run         dry run
    -f, --force           force move/rename even if target exists
    -k                    skip move/rename errors
    --sparse              allow updating entries outside of the sparse-checkout cone


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   Web.css

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Lab.html


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git add Lab.html

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   Lab.html
        new file:   Web.css


std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m
error: switch `m' requires a value

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git commit -m "Only Last Commit"
[master 8d0b12e] Only Last Commit
 2 files changed, 16 insertions(+)
 create mode 100644 Web.css

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$ git status
On branch master
nothing to commit, working tree clean

std@SFC-LAB220-PC07 MINGW64 ~/Desktop/Web---First (master)
$
